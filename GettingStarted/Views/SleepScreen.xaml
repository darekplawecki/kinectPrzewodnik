<Grid
    x:Class="Przewodnik.Views.SleepScreen"
    Name="SleepScreenGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:k="http://schemas.microsoft.com/kinect/2013"
    xmlns:c="clr-namespace:Przewodnik.Controls"
    xmlns:u="clr-namespace:Przewodnik.Utilities"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    Background="Black"
    Loaded="SleepScreenGrid_Loaded">
    
    <Grid.Resources>

        <Color x:Key="PreEngagementBackgroundUserColor" A="#80" R="#40" G="#43" B="#46"/>
        
    </Grid.Resources>

    <Grid Name="InstagramGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid.Resources>
            <DataTemplate x:Key="FadeTransition">
                <Grid>
                    <c:Transition x:Name="t"  Source="{Binding}" />
                    <ContentControl x:Name="a" Visibility="Visible" Opacity="1" Content="{Binding ElementName=t, Path=DisplayA}" />
                    <ContentControl x:Name="b" Visibility="Hidden" Opacity="1" Content="{Binding ElementName=t, Path=DisplayB}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ElementName=t, Path=State}" Value="A">
                        <Setter TargetName="a" Property="Panel.ZIndex" Value="1" />
                        <Setter TargetName="a" Property="Visibility" Value="Visible" />
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="a" Storyboard.TargetProperty="Opacity"
												From="0" To="1" Duration="0:0:0.5" FillBehavior="HoldEnd" />
                                    <ObjectAnimationUsingKeyFrames 
									Storyboard.TargetName="b"
									Storyboard.TargetProperty="Visibility" 
									Duration="0:0:0.5" FillBehavior="Stop"
								>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=t, Path=State}" Value="B">
                        <Setter TargetName="b" Property="Panel.ZIndex" Value="1" />
                        <Setter TargetName="b" Property="Visibility" Value="Visible" />
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="b" Storyboard.TargetProperty="Opacity"
												 From="0" To="1" Duration="0:0:0.5" FillBehavior="HoldEnd" />
                                    <ObjectAnimationUsingKeyFrames 
									Storyboard.TargetName="a"
									Storyboard.TargetProperty="Visibility" 
									Duration="0:0:0.5" FillBehavior="Stop"
								>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        
        <ContentControl
                x:Name="AttractCarousel1"
                Grid.Row="0"
                Grid.Column="0"
                ContentTemplate="{StaticResource FadeTransition}">
        </ContentControl>

        <ContentControl
                x:Name="AttractCarousel2"
                Grid.Row="0"
                Grid.Column="1"
                ContentTemplate="{StaticResource FadeTransition}">
        </ContentControl>

        <ContentControl
                x:Name="AttractCarousel3"
                Grid.Row="0"
                Grid.Column="2"
                ContentTemplate="{StaticResource FadeTransition}">
        </ContentControl>

        <ContentControl
                x:Name="AttractCarousel4"
                Grid.Row="1"
                Grid.Column="0"
                ContentTemplate="{StaticResource FadeTransition}">
        </ContentControl>

        <ContentControl
                x:Name="AttractCarousel5"
                Grid.Row="1"
                Grid.Column="1"
                ContentTemplate="{StaticResource FadeTransition}">
        </ContentControl>

        <ContentControl
                x:Name="AttractCarousel6"
                Grid.Row="1"
                Grid.Column="2"
                ContentTemplate="{StaticResource FadeTransition}">
        </ContentControl>
    </Grid>


    <!-- Big human frame -->
    <c:PromptControl
        Style="{StaticResource ContentFade}"
        State="{Binding IsUserActive, ConverterParameter=False, Converter={StaticResource InvertibleBooleanToPromptStateConverter}}">
        <k:KinectUserViewer
            DefaultUserColor="{StaticResource PreEngagementBackgroundUserColor}"
            UserColoringMode="Manual"
            UserColors="{Binding PreEngagementUserColors}"
            ImageBackground="Transparent"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"/>
    </c:PromptControl>

    <c:PromptControl
        Text="Podnieś rękę aby rozpocząć"
        Foreground="White"
        Background="{StaticResource KinectPurpleBrush}"
        Style="{StaticResource StartBanner}"
        State="{Binding StartBannerState}"/>

    <c:PromptControl
            Background="{StaticResource KinectPurpleBrush}"
            Style="{StaticResource EngagementConfirmation}"
            State="{Binding EngagementConfirmationState}">

        <k:KinectTileButton Background="{StaticResource KinectPurpleBrush}" Width="330" Height="330" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0">
            <u:CommandOnEventHelper.AssociationEntry>
                <u:CommandOnEventAssociation Command="{Binding EngagementConfirmationCommand}" Event="Click"/>
            </u:CommandOnEventHelper.AssociationEntry>
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    FontSize="40"
                    Foreground="White"
                    TextWrapping="Wrap"
                    Text="Wciśnij aby rozpocząć"/>
            </Grid>
        </k:KinectTileButton>
    </c:PromptControl>


</Grid>